#BlueJ class context
comment0.target=Cliente
comment0.text=\n\ Write\ a\ description\ of\ class\ Cliente\ here.\n\n\ @author\ (your\ name)\n\ @version\ (a\ version\ number\ or\ a\ date)\n
comment1.params=
comment1.target=Cliente()
comment1.text=\n\ Um\ construtor\ \u00E9\ um\ m\u00E9todo\ especial\n\ que\ n\u00E3o\ tem\ um\ tipo\ de\ retorno\ (nem\ mesmo\ void).\n\ \n\ Ele\ \u00E9\ usado\ para\ inicializar\ os\ objetos\ criados,\n\ por\ exemplo,\ definindo\ valores\ para\ alguns\n\ de\ seus\ atributos.\n\ \n\ Podemos\ ter\ mais\ de\ um\ construtor.\n\ Quando\ um\ objeto\ \u00E9\ criado,\ algum(ns)\ desses\ construtores\ \u00E9\ chamado.\n\ \n\ Ele\ deve\ ter\ exatamente\ o\ mesmo\ nome\ da\ classe\n\ (com\ inicial\ mai\u00FAscula).\n\ \n\ Um\ construtor\ que\ n\u00E3o\ possui\ par\u00E2metros\ \u00E9\ \n\ chamado\ de\ construtor\ padr\u00E3o.\n
comment2.params=nome\ cpf\ cidade
comment2.target=Cliente(java.lang.String,\ java.lang.String,\ java.lang.String)
comment3.params=nome
comment3.target=void\ setNome(java.lang.String)
comment4.params=cidade
comment4.target=void\ setCidade(java.lang.String)
comment5.params=endereco
comment5.target=void\ setEndereco(java.lang.String)
comment6.params=cpf
comment6.target=void\ setCpf(java.lang.String)
comment7.params=cpf
comment7.target=boolean\ cpfValido(java.lang.String)
numComments=8
